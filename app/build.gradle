plugins {
    id 'kotlin-kapt'
    id("com.google.devtools.ksp")
    id 'com.google.dagger.hilt.android'
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
//    id("org.jetbrains.kotlin.plugin.compose") version "2.2.20"// this version matches your Kotlin version
    alias(libs.plugins.compose.compiler)

    id "de.mannodermaus.android-junit5"
}

android {
    namespace 'com.idimi.garage'
    compileSdk 36

    defaultConfig {
        applicationId "com.idimi.garage"
        minSdk 29
        targetSdk 36
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testInstrumentationRunner "de.mannodermaus.junit5.AndroidJUnit5Builder"
        testInstrumentationRunner "com.idimi.garage.testrunner.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_19
        targetCompatibility JavaVersion.VERSION_19
    }
    kotlinOptions {
        jvmTarget = '19'
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "2.0"//"1.5.15"
    }

    buildFeatures {
        compose true
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform() // This is crucial for JUnit 5
        }
    }
}

dependencies {

    // Compose and UI
    implementation libs.androidx.ui
    implementation libs.androidx.compose.foundation.layout
    implementation libs.androidx.material3
    implementation libs.androidx.activity
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation libs.androidx.compose.ui.graphics
    implementation libs.androidx.compose.ui.tooling
    implementation(libs.androidx.navigation.compose)
    implementation(libs.androidx.compose.runtime)
    //androidTestImplementation libs.androidx.compose.ui.test.junit4

    def composeBom = libs.androidx.compose.bom
    implementation composeBom
    androidTestImplementation composeBom

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    // Retrofit 2
    implementation libs.retrofit.v300
    implementation libs.converter.gson
    implementation libs.logging.interceptor

    implementation libs.okhttp
    implementation libs.okhttp.urlconnection
    // Room
    implementation(libs.androidx.room.runtime)
    annotationProcessor libs.androidx.room.compiler
    implementation libs.androidx.room.ktx
    ksp libs.androidx.room.compiler

    // Hilt
    implementation libs.hilt.android
    debugImplementation libs.androidx.compose.ui.tooling
    debugImplementation libs.androidx.compose.ui.test.manifest
//    implementation libs.hilt.compiler
    kapt libs.hilt.android.compiler
//    ksp libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose
    androidTestImplementation(libs.hilt.android.testing)

    // Google Play
    implementation(libs.play.services.maps)
    implementation(libs.maps.compose)
    implementation(libs.play.services.location)

    // Coil
    implementation(libs.coil.compose)
    implementation(libs.coil.gif)

    // Testing
//    testImplementation(libs.junit.jupiter.api)
//    testRuntimeOnly(libs.junit.jupiter.engine)
    testImplementation(libs.junit.jupiter.api)
    testRuntimeOnly(libs.junit.jupiter.engine)

    // (Optional) If you need "Parameterized Tests"
    testImplementation(libs.junit.jupiter.params)

    // (Optional) If you also have JUnit 4-based tests
    testImplementation(libs.junit)
    testRuntimeOnly(libs.junit.vintage.engine)

    // - Testing Coroutines
    testImplementation(libs.kotlinx.coroutines.test)

    // - Assertions
    testImplementation(libs.truth)

    // - Mock
    testImplementation(libs.mockk)
    androidTestImplementation libs.mockk.android

    // Android
    androidTestImplementation(libs.androidx.core)
    androidTestImplementation(libs.core.ktx)
    androidTestImplementation(libs.androidx.runner)
    androidTestImplementation(libs.androidx.rules)

    androidTestImplementation(libs.junit.jupiter.api)
    androidTestRuntimeOnly(libs.junit.jupiter.engine)


    androidTestImplementation(libs.androidx.ui.test.junit4)
    debugImplementation(libs.androidx.ui.test.manifest)

    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.8.0")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.8.0")


}
